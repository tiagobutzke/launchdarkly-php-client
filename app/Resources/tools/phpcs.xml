<ruleset name="Foodpanda Coding Rules">
    <description>A coding standard based on PSR-1 and PSR-2.</description>
    <!-- http://pear.php.net/package/PHP_CodeSniffer/ -->

    <!-- Exclude Code from dependencies -->
    <exclude-pattern type="relative">vendor/*</exclude-pattern>
    <exclude-pattern type="relative">src/Foodpanda/Bundle/Test/*</exclude-pattern>

    <!-- General Standard sniffers -->
    <rule ref="PSR1"/>
    <rule ref="PSR2"/>

    <!-- Adding sf2 rules in order to ignore @inheritdoc -->
    <rule ref="./vendor/leaphub/phpcs-symfony2-standard/leaphub/phpcs/Symfony2">
        <exclude name="Generic.Files.LineLength.TooLong" />
        <exclude name="Squiz.Strings.DoubleQuoteUsage.ContainsVar" />
        <exclude name="Generic.Functions.OpeningFunctionBraceBsdAllman.BraceOnSameLine" />
        <exclude name="Symfony2.Commenting.ClassComment.Missing" />
        <exclude name="Symfony2.Commenting.FunctionComment.SpacingAfterParamType" />
        <exclude name="Squiz.WhiteSpace.SuperfluousWhitespace.EndLine" />
        <exclude name="Squiz.Strings.DoubleQuoteUsage.NotRequired" />
        <exclude name="Symfony2.Formatting.BlankLineBeforeReturn" />
        <exclude name="Symfony2.WhiteSpace.DiscourageFitzinator" />
        <exclude name="Squiz.PHP.CommentedOutCode.Found" />
    </rule>


    <!-- Specific Rules -->

    <!-- All PHP files MUST use the Unix LF (linefeed) line ending. -->
    <rule ref="Generic.Files.LineEndings">
        <properties>
            <property name="eolChar" value="\n"/>
        </properties>
    </rule>

    <!-- Source http://edorian.github.io/php-coding-standard-generator -->
    <rule ref="Generic.CodeAnalysis.EmptyStatement"/>
    <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
    <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>
    <rule ref="Generic.ControlStructures.InlineControlStructure"/>
    <rule ref="Generic.NamingConventions.ConstructorName"/>
    <rule ref="Generic.PHP.ForbiddenFunctions"/>
    <rule ref="Squiz.PHP.InnerFunctions"/>
    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
    <rule ref="Squiz.PHP.NonExecutableCode"/>

</ruleset>
